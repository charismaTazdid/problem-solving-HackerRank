Problem: 
JHON owns a garden in which he has planted N trees in a row. After a few years, the trees have grown up and now they have different heights. 
Jhon pays attention to the asthetics of his garder. He finds his trees aesthetically pleaseing if they altemately increase and decrease in height (... sorter, taller, shorter, taller....)

Note that two adjacent trees cannot have equal heights. It may turn out that some trees have to be cut out, in order to keep the remaining trees aesthetically pleasing. However, there is a legal restriction that allows a gardener to cut out at most one tree in his possession. 
In how many ways can JHON cut out exactly one tree, so that the remaining ones are aesthetically pleasing?


Write a function: 
That, given an Array A consisting of N integers, where A[k] denotes the height of the K-th tree.
** returns the number of ways of cutting out one tree, so that the remaining trees are aesthetically Pleasing.
 If it is not possible to achieve the desired result, your function shohuld return -1.
 If the trees are already asthetically pleaseing without any removal, your function should return 0.

Example 1: Given Array A = [3, 4, 5, 3, 7], your function should return 3. 
	* you can remove A[0] so the sequence becomes [4, 5, 3, 7]
	* you can remove A[1] so the sequence becomes [3, 5, 3, 7]
	* you can remove A[2] so the sequence becomes [3, 4, 3, 7]

Example 2: Given A = [1, 2, 3, 4] , your function should return -1. since there is no single tree that jhon can cut out, that leave the rest trees looking aesthetically pleasing.

Example 3 : Given A = [1, 3, 1, 2], your function should return 0. since the trees are already aesthetically pleasing and no removal is needed.
